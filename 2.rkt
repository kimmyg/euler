#lang racket

#|

2

Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four 
million, find the sum of the even-valued terms.

SOLUTION

f0 = 0
f1 = 1

0 1 1 2 3 5 8 13 21 34

f_i is even if i = 0 (mod 3)

f_i = f_(i-1) + f_(i-2)
f_i = 2f_(i-2) + f_(i-3)
f_i = 3f_(i-3)+2f_(i-4)

|#

(require racket/generator)

(define fib (generator ()
                       (let loop ([a 0] [b 1])
                         (begin
                           (yield a)
                           (loop b (+ a b))))))

(let loop ([i 0] [acc 0])
  (let ([f (fib)])
    (if (< f 4000000)
        (if (zero? (remainder i 3))
            (loop (add1 i) (+ acc f))
            (loop (add1 i) acc))
        acc)))

                         